import GraphicSVG.EllieApp exposing(GetKeyState)
import GraphicSVG exposing (Shape, Color)
import Dict exposing (Dict)

{-
REQUIRED TYPES
The following types must exist for TEASync to function:
- LocalMsg
- GlobalMsg
- LocalModel
- GlobalModel

You are free to change these as you would like, but don't
rename them.
-}



type State = StartingScreen
            | PlayingScreen
            | SingleScreen
            | WinningScreenNext
          
type PossibleToppings = Cheese
                       | Spinach
                       | Mushroom
                       | Pineapple
                       | Olives
                       | Pepperoni
                       | NoTopping
                       

type MouseState = Waiting
                  | Draggingshape PossibleToppings (Float,Float)
                  | DraggingTShape TShapes (Float, Float)

type OverlayState = MenuScreen
                   | Settings
                   | Quit
                   | Hint
                   | Attempts
                   | None
                  

type alias Pizza = {topping : List (PossibleToppings, (Float,Float)), cheese : Bool}

type GameState 
    = NoPlayersJoined
    | PlayerOneJoined
    | PlayerOneLeft
    | PlayerTwoJoined
    | PlayerTwoLeft
    | Playing
    
type LocalState
    = AtMainMenu
    | InLobby Player
    | PlayingGame LocalGameState Player
    | WinningScreen
    | LosingScreen
    
type LocalGameState = MultiPlayer
                     | SinglePlayer

type Player = PlayerOne | PlayerTwo | Nobody

type Target = Name | Empty

type LocalMsg 
       =  Tick Float GetKeyState
          | Go2Singleplayer Player
          | Go2MenuScreen
          | Go2Settings
          | Go2HintScreen
          | Go2NextRound
          | LetGo
          | NewPos (Float,Float)
          | MovePos (Float,Float)
          | Restart Player
          | QuitGame Int Player
          | Change String Color
          | Exit
          | LocalPlayerJoin Player
          | LocalStart LocalGameState
          | GrabTopping PossibleToppings (Float,Float)
          | GrabTShape TShapes (Float,Float)
          | UpdateTShape2 TShapes (Float,Float)
          | UpdateShape2 PossibleToppings (Float, Float)
          | ChangeName String
          | KeyBoard Target
          | Input String
          | AddCheese
          | Bell Float


type alias LocalModel = {time : Float
                         , overlay : OverlayState
                         , mouseState : MouseState
                         , localState : LocalState
                         , bgColour : Color
                         , tableColour : Color
                         , toppingColour : Color
                         , buttonColour : Color
                         , crustColour : Color
                         , stime : Float
                         , otime : Float
                         , toppings2 : List(TShapes)
                         , name : String
                         , openKeyboard : Bool
                         , pizza : Pizza
                         , timeCompleted : Float
                         , bestTime : Float
                         , attemptsLeft : Int}
                         

type GlobalMsg
    = TimeUp
    | Done
    | NewTopping (List Int)
    | GetNewTopping
    | LevelUp
    | PlayerJoin Player
    | PlayerLeft Player
    | StartGame LocalGameState
    | UpdateShape PossibleToppings (Float, Float) Player-- Shape = topping, NOT TShape
    | UpdateTShape TShapes (Float,Float) Player
    | AddCheeseG Player

type alias GlobalModel = {gameState : GameState
                         ,level : Int
                         , rando : List Int
                         , alottedTime : Float
                         , toppings : List(TShapes) -- To display toppings
                         , p1Toppings : List(TShapes) -- Specifically player 1 toppings
                         , p2Toppings : List(TShapes) -- Specifically player 2 toppings
                         , p1Cheese : Bool
                         , p2Cheese : Bool
                         }
    

-- TShapes are the toppings with x,y coordinates
type TShapes = Shape PossibleToppings (Float,Float)
{- 
USER-DEFINED TYPES
You can define as many types as you'd like below, and
you will be able to use them in your types above.
-}
